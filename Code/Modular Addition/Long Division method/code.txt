module Shift_Registers (
    input wire clk,
    input wire rst,
    input wire start,
    input wire [3:0] r1_in,
    input wire [3:0] r2_in,
    input wire [3:0] m,
    output reg [4:0] out,
    output reg busy
);
    reg [4:0] r3;
    reg [4:0] temp;
    reg [2:0] count;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            r3 <= 0;
            out <= 0;
            temp <= 0;
            busy <= 0;
            count <= 0;
        end else begin
            if (start && !busy) begin
                r3 <= r1_in + r2_in;
                out <= 5'b00000;
                busy <= 1;
                count <= 0;
            end else if (busy) begin
                temp = {out[3:0], r3[4]};
                if (temp >= m) begin
                    temp = temp - m;
                end

                out <= temp;
                r3 <= {r3[3:0], 1'b0};
                count <= count + 1;

                if (count == 4) begin
                    busy <= 0;
                end
            end
        end
    end
endmodule